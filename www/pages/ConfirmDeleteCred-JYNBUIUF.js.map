{
  "version": 3,
  "sources": ["../../front/src/pages/ConfirmDeleteCred.js"],
  "sourcesContent": ["let gotoPage = window.MHR.gotoPage\nlet goHome = window.MHR.goHome\nlet storage = window.MHR.storage\n\n\nwindow.MHR.register(\"ConfirmDeleteCred\", class extends window.MHR.AbstractPage {\n\n    constructor(id) {\n        super(id)\n    }\n\n    enter(pageData) {\n        let html = this.html\n\n        // We expect pageData to be an object with two fields:\n        // - title: the string to be used for the title of the message\n        // - msg: the string with the details\n\n        // Provide a default title if the user did not set the title\n        let title = T(\"Confirm Delete\")\n\n        // Provide a default message if the user did not specify it\n        let msg = \"Are you sure you want to delete this credential?\"\n\n        // The id of the credential to delete\n        let currentId = pageData\n\n        // Display the title and message, with a button that goes to the home page\n        let theHtml = html`\n\n        <ion-card>\n\n            <ion-card-header>\n                <ion-card-title>${title}</ion-card-title>\n            </ion-card-header>\n\n\n            <ion-card-content class=\"ion-padding-bottom\">\n\n                <p>${msg}</p>\n\n            </ion-card-content>\n\n            <div class=\"ion-margin-start ion-margin-bottom\">\n\n                <ion-button @click=${()=> history.back()}>\n                    <ion-icon slot=\"start\" name=\"chevron-back\"></ion-icon>\n                    ${T(\"Cancel\")}\n                </ion-button>\n\n                <ion-button color=\"danger\" @click=${()=> this.deleteVC(currentId)}>\n                    <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                    ${T(\"Confirm delete\")}\n                </ion-button>\n\n            </div>\n        </ion-card>\n        `\n        this.render(theHtml)\n    }\n\n    async deleteVC(currentId) {\n        await storage.credentialsDelete(currentId)\n        goHome()\n        return\n    }\n\n})\n\n"],
  "mappings": ";AAAA,IAAI,WAAW,OAAO,IAAI;AAC1B,IAAI,SAAS,OAAO,IAAI;AACxB,IAAI,UAAU,OAAO,IAAI;AAGzB,OAAO,IAAI,SAAS,qBAAqB,cAAc,OAAO,IAAI,aAAa;AAAA,EAE3E,YAAY,IAAI;AACZ,UAAM,EAAE;AAAA,EACZ;AAAA,EAEA,MAAM,UAAU;AACZ,QAAI,OAAO,KAAK;AAOhB,QAAI,QAAQ,EAAE,gBAAgB;AAG9B,QAAI,MAAM;AAGV,QAAI,YAAY;AAGhB,QAAI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,kCAKY,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMlB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMa,MAAK,QAAQ,KAAK,CAAC;AAAA;AAAA,sBAElC,EAAE,QAAQ,CAAC;AAAA;AAAA;AAAA,oDAGmB,MAAK,KAAK,SAAS,SAAS,CAAC;AAAA;AAAA,sBAE3D,EAAE,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMjC,SAAK,OAAO,OAAO;AAAA,EACvB;AAAA,EAEA,MAAM,SAAS,WAAW;AACtB,UAAM,QAAQ,kBAAkB,SAAS;AACzC,WAAO;AACP;AAAA,EACJ;AAEJ,CAAC;",
  "names": []
}
