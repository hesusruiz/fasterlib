{
  "version": 3,
  "sources": ["../../front/src/pages/CreateOfferingPage.js"],
  "sourcesContent": ["import PocketBase from '../components/pocketbase.es.mjs'\r\n\r\nconst pb = new PocketBase(window.location.origin)\r\n\r\nlet gotoPage = window.MHR.gotoPage\r\nlet goHome = window.MHR.goHome\r\nlet storage = window.MHR.storage\r\nlet myerror = window.MHR.storage.myerror\r\nlet mylog = window.MHR.storage.mylog\r\nlet html = window.MHR.html\r\n\r\nvar pageName = \"CreateOfferingPage\"\r\nwindow.MHR.register(pageName, class extends window.MHR.AbstractPage {\r\n\r\n    constructor(id) {\r\n        super(id)\r\n    }\r\n\r\n    async enter() {\r\n\r\n        console.log(\"AuthStore is valid:\", pb.authStore.isValid)\r\n        console.log(pb.authStore.model)\r\n\r\n        if (!pb.authStore.isValid || !pb.authStore.model.verified) {\r\n            myerror(`${pageName}: user not verified`)\r\n            gotoPage(\"ErrorPage\", {title: \"User not verified\"})\r\n            return\r\n        }\r\n\r\n        var theHtml\r\n        theHtml = mandateForm()\r\n        this.render(theHtml, false)\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n// mandateForm presents the form for the Mandate\r\nfunction mandateForm() {\r\n\r\n    // Retrieve the user information from the local AuthStore\r\n    var model = pb.authStore.model\r\n\r\n    return html`\r\n<ion-card>\r\n    <ion-card-header>\r\n        <ion-card-title>Create a Mandate as a Verifiable Credential</ion-card-title>\r\n    </ion-card-header>\r\n\r\n    <ion-card-content>\r\n\r\n        <ion-grid>\r\n            <ion-row>\r\n                <ion-col size=\"12\" size-md=\"6\">\r\n\r\n                    <ion-item-group>\r\n\r\n                        <ion-item-divider>\r\n                            <ion-label> Mandator (Signer) </ion-label>\r\n                        </ion-item-divider>\r\n\r\n                        <ion-item>\r\n                            <ion-input id=\"OrganizationIdentifier\" label=\"OrganizationIdentifier:\" label-placement=\"stacked\"\r\n                            value=\"${model.organizationIdentifier}\" ?readonly=${model.organizationIdentifier}></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"Organization\" label=\"Organization:\" label-placement=\"stacked\"\r\n                            value=\"${model.organization}\" ?readonly=${model.organization}></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"CommonName\" label=\"CommonName:\" label-placement=\"stacked\"\r\n                            value=\"${model.commonName}\" ?readonly=${model.commonName}></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"EmailAddress\" label=\"EmailAddress:\" label-placement=\"stacked\"\r\n                            value=\"${model.email}\" ?readonly=${model.email}></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"SerialNumber\" label=\"SerialNumber:\" label-placement=\"stacked\"\r\n                            value=\"${model.serialNumber}\" ?readonly=${model.serialNumber}></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"Country\" label=\"Country:\" label-placement=\"stacked\"\r\n                            value=\"${model.country}\" ?readonly=${model.country}></ion-input>\r\n                        </ion-item>\r\n\r\n                    </ion-item-group>\r\n\r\n                </ion-col>\r\n\r\n                <ion-col size=\"12\" size-md=\"6\">\r\n\r\n                    <ion-item-group>\r\n\r\n                        <ion-item-divider>\r\n                            <ion-label> Mandatee (Holder and Subject) </ion-label>\r\n                        </ion-item-divider>\r\n\r\n                        <ion-item>\r\n                            <ion-input id=\"first_name\" label=\"First name:\" label-placement=\"stacked\"></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"last_name\" label=\"Last name:\" label-placement=\"stacked\"></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"gender\" label=\"Gender:\" label-placement=\"stacked\"></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"email\" label=\"Email:\" label-placement=\"stacked\"></ion-input>\r\n                        </ion-item>\r\n                        <ion-item>\r\n                            <ion-input id=\"mobile_phone\" label=\"Mobile phone:\" label-placement=\"stacked\"></ion-input>\r\n                        </ion-item>\r\n\r\n                    </ion-item-group>\r\n\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n            <ion-row>\r\n                <ion-col size=\"12\" size-md=\"6\">\r\n\r\n                    <ion-item-group>\r\n\r\n                        <ion-item-divider>\r\n                            <ion-label> Powers (1 of 2) </ion-label>\r\n                        </ion-item-divider>\r\n\r\n                        <ion-item>\r\n                            <ion-input id=\"tmf_domain1\" label=\"Domain:\" label-placement=\"stacked\" value=\"DOME\" readonly=\"true\"></ion-input>\r\n                        </ion-item>\r\n\r\n                        <ion-item>\r\n                            <ion-select id=\"tmf_function1\" label=\"Function:\" label-placement=\"stacked\" justify=\"start\" placeholder=\"Select the function\">\r\n                                <ion-select-option value=\"Onboarding\">Onboarding</ion-select-option>\r\n                                <ion-select-option value=\"ProductOffering\">Product Offering</ion-select-option>\r\n                            </ion-select>\r\n                        </ion-item>\r\n\r\n                        <ion-item>\r\n                            <ion-label position=\"stacked\">Allowed actions:</ion-label>\r\n                            <ion-toggle id=\"Execute1\" name=\"Execute\" label-placement=\"end\" justify=\"start\">Execute</ion-toggle>\r\n                            <ion-toggle id=\"Create1\" name=\"Create\" label-placement=\"end\" justify=\"start\">Create</ion-toggle>\r\n                            <ion-toggle id=\"Update1\" name=\"Update\" label-placement=\"end\" justify=\"start\">Update</ion-toggle>\r\n                            <ion-toggle id=\"Delete1\" name=\"Delete\" label-placement=\"end\" justify=\"start\">Delete</ion-toggle>\r\n                        </ion-item>\r\n\r\n                    </ion-item-group>\r\n                </ion-col>\r\n                <ion-col size=\"12\" size-md=\"6\">\r\n\r\n                    <ion-item-group>\r\n\r\n                        <ion-item-divider>\r\n                            <ion-label> Powers (2 of 2) </ion-label>\r\n                        </ion-item-divider>\r\n\r\n                        <ion-item>\r\n                            <ion-input id=\"tmf_domain2\" label=\"Domain:\" label-placement=\"stacked\" value=\"DOME\" readonly=\"true\"></ion-input>\r\n                        </ion-item>\r\n\r\n                        <ion-item>\r\n                            <ion-select id=\"tmf_function2\" label=\"Function:\" label-placement=\"stacked\" justify=\"start\" placeholder=\"Select the function\">\r\n                                <ion-select-option value=\"Onboarding\">Onboarding</ion-select-option>\r\n                                <ion-select-option value=\"ProductOffering\">Product Offering</ion-select-option>\r\n                            </ion-select>\r\n                        </ion-item>\r\n\r\n                        <ion-item>\r\n                            <ion-label position=\"stacked\">Action:</ion-label>\r\n                            <ion-toggle id=\"Execute2\" name=\"Execute\" label-placement=\"end\" justify=\"start\">Execute</ion-toggle>\r\n                            <ion-toggle id=\"Create2\" name=\"Create\" label-placement=\"end\" justify=\"start\">Create</ion-toggle>\r\n                            <ion-toggle id=\"Update2\" name=\"Update\" label-placement=\"end\" justify=\"start\">Update</ion-toggle>\r\n                            <ion-toggle id=\"Delete2\" name=\"Delete\" label-placement=\"end\" justify=\"start\">Delete</ion-toggle>\r\n                        </ion-item>\r\n\r\n                    </ion-item-group>\r\n                </ion-col>\r\n            </ion-row>\r\n\r\n        </ion-grid>\r\n\r\n    </ion-card-content>\r\n\r\n    <div class=\"ion-margin-start ion-margin-bottom\">\r\n        <ion-button @click=${()=> createCredentialOffer()}>\r\n            ${T(\"Create\")}\r\n        </ion-button>\r\n        <ion-button @click=${()=> window.MHR.cleanReload()}>\r\n            ${T(\"Cancel\")}\r\n        </ion-button>\r\n    </div>\r\n\r\n\r\n</ion-card>\r\n`\r\n\r\n}\r\n\r\nasync function createCredentialOffer() {\r\n\r\n    const mandator = {\r\n        OrganizationIdentifier: document.getElementById(\"OrganizationIdentifier\").value,\r\n        Organization: document.getElementById(\"Organization\").value,\r\n        CommonName: document.getElementById(\"CommonName\").value,\r\n        EmailAddress: document.getElementById(\"EmailAddress\").value,\r\n        SerialNumber: document.getElementById(\"SerialNumber\").value,\r\n        Country: document.getElementById(\"Country\").value,\r\n    }\r\n\r\n    const mandatee = {\r\n        first_name: document.getElementById(\"first_name\").value,\r\n        last_name: document.getElementById(\"last_name\").value,\r\n        gender: document.getElementById(\"gender\").value,\r\n        email: document.getElementById(\"email\").value,\r\n        mobile_phone: document.getElementById(\"mobile_phone\").value,\r\n    }\r\n\r\n    var action1 = []\r\n    if (document.getElementById(\"Execute1\").checked) {\r\n        action1.push(\"Execute\")\r\n    }\r\n    if (document.getElementById(\"Create1\").checked) {\r\n        action1.push(\"Create\")\r\n    }\r\n    if (document.getElementById(\"Update1\").checked) {\r\n        action1.push(\"Update\")\r\n    }\r\n    if (document.getElementById(\"Delete1\").checked) {\r\n        action1.push(\"Delete\")\r\n    }\r\n\r\n    const power1 = {\r\n        tmf_type: \"Domain\",\r\n        tmf_domain: [document.getElementById(\"tmf_domain1\").value],\r\n        tmf_function: document.getElementById(\"tmf_function1\").value,\r\n        tmf_action: action1\r\n    }\r\n\r\n    var action2 = []\r\n    if (document.getElementById(\"Execute2\").checked) {\r\n        action2.push(\"Execute\")\r\n    }\r\n    if (document.getElementById(\"Create2\").checked) {\r\n        action2.push(\"Create\")\r\n    }\r\n    if (document.getElementById(\"Update2\").checked) {\r\n        action2.push(\"Update\")\r\n    }\r\n    if (document.getElementById(\"Delete2\").checked) {\r\n        action2.push(\"Delete\")\r\n    }\r\n\r\n    const power2 = {\r\n        tmf_type: \"Domain\",\r\n        tmf_domain: [document.getElementById(\"tmf_domain2\").value],\r\n        tmf_function: document.getElementById(\"tmf_function2\").value,\r\n        tmf_action: action2\r\n    }\r\n\r\n    var powers = []\r\n    if (document.getElementById(\"tmf_function1\").value) {\r\n        powers.push(power1)\r\n    }\r\n    if (document.getElementById(\"tmf_function2\").value) {\r\n        powers.push(power2)\r\n    }\r\n\r\n    // Some validations (not comprehensive)\r\n    var errorMessages = []\r\n    if (!document.getElementById(\"email\").value) {\r\n        errorMessages.push(html`The email field of the Mandatee can not be empty.<br>`)\r\n    }\r\n    if (!power1.tmf_function || action1.length == 0) {\r\n        errorMessages.push(html`At least one power should be specified.`)\r\n    }\r\n\r\n    if (errorMessages.length > 0) {\r\n        gotoPage(\"ErrorPage\", {title: \"The form is invalid\", msg: errorMessages, back: true})\r\n        return\r\n    }\r\n\r\n    const data = {\r\n        Mandator: mandator,\r\n        Mandatee: mandatee,\r\n        Power: powers\r\n    }\r\n        \r\n\r\n    // Create the JSON structure of the credential but do not store anything yet in the server\r\n    try {\r\n        var jsonCredential = await pb.send('/apisigner/createjsoncredential', \r\n        {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        console.log(jsonCredential)            \r\n    } catch (error) {\r\n        gotoPage(\"ErrorPage\", {title: \"Error creating credential\", msg: error.message})\r\n        return\r\n    }\r\n\r\n    gotoPage(\"DisplayOfferingPage\", jsonCredential)\r\n\r\n\r\n    // window.MHR.cleanReload()\r\n}\r\n\r\nwindow.MHR.register(\"DisplayOfferingPage\", class extends window.MHR.AbstractPage {\r\n\r\n    constructor(id) {\r\n        super(id)\r\n    }\r\n\r\n    async enter(jsonCredential) {\r\n\r\n        const learcred = JSON.stringify(jsonCredential, null, \"  \")\r\n\r\n        console.log(\"AuthStore is valid:\", pb.authStore.isValid)\r\n        console.log(pb.authStore.model)\r\n\r\n        if (!pb.authStore.isValid || !pb.authStore.model.verified) {\r\n            gotoPage(\"ErrorPage\", {title: \"User not verified\"})\r\n            return\r\n        }\r\n\r\n        const theHtml = html`\r\n        <div id=\"theVC\" class=\"half-centered\">\r\n            <p>Review the proposed LEARCredential offer and confirm to send to server: </p>\r\n        \r\n<pre><code class=\"language-json\">${learcred}</code></pre>\r\n        \r\n        </div>\r\n        \r\n        <div class=\"ion-margin-start ion-margin-bottom\">\r\n            <ion-button @click=${()=> storeOfferingInServer(jsonCredential)}>\r\n                <ion-icon slot=\"start\" name=\"home\"></ion-icon>\r\n                ${T(\"Save Credential Offer\")}\r\n            </ion-button>\r\n            <ion-button @click=${()=> history.back()}>\r\n                <ion-icon slot=\"start\" name=\"chevron-back\"></ion-icon>\r\n                ${T(\"Back\")}\r\n            </ion-button>\r\n        </div>\r\n        `\r\n\r\n        this.render(theHtml, false)\r\n\r\n        // Re-run the highlighter for the VC display\r\n        Prism.highlightAll()\r\n\r\n    }\r\n\r\n})\r\n\r\nasync function storeOfferingInServer(jsonCredential) {\r\n    const userEmail = jsonCredential.credentialSubject.mandate.mandatee.email\r\n    const learcred = JSON.stringify(jsonCredential)\r\n\r\n    var model = pb.authStore.model\r\n\r\n    // Sign the credential in the server with the x509 certificate\r\n    try {\r\n        var result = await pb.send('/apisigner/signcredential', \r\n        {\r\n            method: \"POST\",\r\n            body: learcred,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        var signedCredential = result.signed\r\n        console.log(signedCredential)            \r\n    } catch (error) {\r\n        gotoPage(\"ErrorPage\", {title: \"Error creating credential\", msg: error.message})\r\n        return\r\n    }\r\n\r\n    // Create the record in \"tobesigned\" status\r\n    var data = {\r\n        status: \"offered\",\r\n        email: userEmail,\r\n        type: \"jwt_vc\",\r\n        raw: signedCredential,\r\n        creator_email: model.email,\r\n        signer_email: model.email\r\n    };\r\n\r\n    try {\r\n        var tobesignedRecord = await pb.collection('credentials').create(data);\r\n        console.log(tobesignedRecord)            \r\n    } catch (error) {\r\n        gotoPage(\"ErrorPage\", {title: \"Error saving credential\", msg: error.message})\r\n        return\r\n    }\r\n\r\n\r\n\r\n    // // Create the record in \"tobesigned\" status\r\n    // var data = {\r\n    //     status: \"tobesigned\",\r\n    //     email: userEmail,\r\n    //     type: \"jwt_vc\",\r\n    //     raw: learcred,\r\n    //     creator_email: model.email\r\n    // };\r\n\r\n    // try {\r\n    //     var tobesignedRecord = await pb.collection('credentials').create(data);\r\n    //     console.log(tobesignedRecord)            \r\n    // } catch (error) {\r\n    //     gotoPage(\"ErrorPage\", {title: \"Error saving credential\", msg: error.message})\r\n    //     return\r\n    // }\r\n\r\n\r\n    // // Sign the credential in the server with the x509 certificate\r\n    // try {\r\n    //     var result = await pb.send('/apisigner/signcredential', \r\n    //     {\r\n    //         method: \"POST\",\r\n    //         body: learcred,\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //     })\r\n    //     var signedCredential = result.signed\r\n    //     console.log(signedCredential)            \r\n    // } catch (error) {\r\n    //     gotoPage(\"ErrorPage\", {title: \"Error creating credential\", msg: error.message})\r\n    //     return\r\n    // }\r\n\r\n\r\n    // // Store the signed credential with the status \"signed\"\r\n    // data = {\r\n    //     status: \"signed\",\r\n    //     email: userEmail,\r\n    //     type: \"jwt_vc\",\r\n    //     raw: signedCredential,\r\n    //     signer_email: model.email\r\n    // };\r\n\r\n    // try {\r\n    //     console.log(\"Storing signed credential in Record\", tobesignedRecord.id)\r\n    //     const record = await pb.collection('credentials').update(tobesignedRecord.id, data);\r\n    //     console.log(record)            \r\n    // } catch (error) {\r\n    //     gotoPage(\"ErrorPage\", {title: \"Error saving credential\", msg: error.message})\r\n    //     return\r\n    // }\r\n\r\n    alert(\"Credential saved!!\")\r\n\r\n    goHome()\r\n\r\n}\r\n\r\n\r\n"],
  "mappings": "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",
  "names": []
}
