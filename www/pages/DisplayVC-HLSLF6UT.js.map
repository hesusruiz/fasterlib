{
  "version": 3,
  "sources": ["../../front/src/pages/DisplayVC.js"],
  "sourcesContent": ["let gotoPage = window.MHR.gotoPage\r\nlet goHome = window.MHR.goHome\r\nlet storage = window.MHR.storage\r\n\r\nlet myerror = window.MHR.storage.myerror\r\nlet mylog = window.MHR.storage.mylog\r\n\r\nwindow.MHR.register(\"DisplayVC\", class DisplayVC extends window.MHR.AbstractPage {\r\n\r\n    constructor(id) {\r\n        super(id)\r\n    }\r\n\r\n    async enter(vcraw) {\r\n        // We receive the hash of the credential as its unique ID\r\n\r\n        let html = this.html\r\n        console.log(vcraw)\r\n\r\n        var theData = JSON.stringify(vcraw.decoded, null, \"  \")\r\n\r\n        const theHtml = html`\r\n        <div id=\"theVC\">\r\n        <p>You have this Verifiable Credential: </p>\r\n        \r\n<pre ><code class=\"language-json\">\r\n${theData}\r\n</code></pre>\r\n        \r\n        </div>\r\n\r\n        <div class=\"ion-margin-start ion-margin-bottom\">\r\n            <ion-button @click=${()=> goHome()}>\r\n                <ion-icon slot=\"start\" name=\"home\"></ion-icon>\r\n                ${T(\"Home\")}\r\n            </ion-button>\r\n        </div>\r\n        `\r\n\r\n        this.render(theHtml, true)\r\n\r\n        // Re-run the highlighter for the VC display\r\n        Prism.highlightAll()\r\n    }\r\n\r\n})\r\n\r\n// TODO: modify storage mechanism\r\nasync function getCompliancyCredential(theCredential, serviceAddress) {\r\n    try {\r\n        console.log(theCredential)\r\n        var credentialReq = {\r\n            '@context': \"https://www.w3.org/2018/credentials/v1\",\r\n            type: \"VerifiablePresentation\",\r\n            verifiableCredential: [\r\n                JSON.parse(theCredential)\r\n            ]\r\n        }\r\n        console.log(\"Body \" + JSON.stringify(credentialReq))\r\n        let response = await fetch(serviceAddress, {\r\n            method: \"POST\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(credentialReq),\r\n            mode: \"cors\"\r\n        });\r\n        if (response.ok) {\r\n            var credentialBody = await response.text();\r\n        } else {\r\n            if (response.status == 403) {\r\n                alert.apply(\"error 403\");\r\n                goHome();\r\n                return \"Error 403\";\r\n            }\r\n            var error = await response.text();\r\n            myerror(error);\r\n            goHome();\r\n            alert(error);\r\n            return null;\r\n        }\r\n    } catch (error2) {\r\n        myerror(error2);\r\n        alert(error2);\r\n        return null;\r\n    }\r\n    console.log(credentialBody);\r\n    // Store it in local storage\r\n    mylog(\"Store \" + credentialBody)\r\n    let total = 0;\r\n    if (!!window.localStorage.getItem(\"W3C_VC_LD_TOTAL\")) {\r\n        total = parseInt(window.localStorage.getItem(\"W3C_VC_LD_TOTAL\"))\r\n        mylog(\"Total \" + total)\r\n    }\r\n    const id = \"W3C_VC_LD_\" + total\r\n    window.localStorage.setItem(id, credentialBody)\r\n    total = total + 1;\r\n    mylog(total + \" credentials in storage.\")\r\n    window.localStorage.setItem(\"W3C_VC_LD_TOTAL\", total)\r\n    // Reload the application with a clean URL\r\n    gotoPage(\"DisplayVC\", id)\r\n    return\r\n}\r\n"],
  "mappings": ";AAAA,IAAI,WAAW,OAAO,IAAI;AAC1B,IAAI,SAAS,OAAO,IAAI;AACxB,IAAI,UAAU,OAAO,IAAI;AAEzB,IAAI,UAAU,OAAO,IAAI,QAAQ;AACjC,IAAI,QAAQ,OAAO,IAAI,QAAQ;AAE/B,OAAO,IAAI,SAAS,aAAa,MAAM,kBAAkB,OAAO,IAAI,aAAa;AAAA,EAE7E,YAAY,IAAI;AACZ,UAAM,EAAE;AAAA,EACZ;AAAA,EAEA,MAAM,MAAM,OAAO;AAGf,QAAI,OAAO,KAAK;AAChB,YAAQ,IAAI,KAAK;AAEjB,QAAI,UAAU,KAAK,UAAU,MAAM,SAAS,MAAM,IAAI;AAEtD,UAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAMwB,MAAK,OAAO,CAAC;AAAA;AAAA,kBAE5B,EAAE,MAAM,CAAC;AAAA;AAAA;AAAA;AAKnB,SAAK,OAAO,SAAS,IAAI;AAGzB,UAAM,aAAa;AAAA,EACvB;AAEJ,CAAC;",
  "names": []
}
